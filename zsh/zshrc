setopt IGNOREEOF

# 環境変数 {{{
# export TRANSPARENT_TERM=1
# }}}

# LOCALE {{{
# export LC_TIME=en_US.utf-8
# export LANG=ja_JP.utf-8
# }}}

# Colored
autoload -Uz colors
colors

# completion
autoload -Uz compinit
compinit

zstyle ':completion:*' menu true select
zstyle ':completion:*:rm:*' menu false


# 他のターミナルとヒストリーを共有
setopt share_history

# ヒストリーに重複を表示しない
setopt histignorealldups

HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000

# cdコマンドを省略して、ディレクトリ名のみの入力で移動
setopt auto_cd

# 自動でpushdを実行
setopt auto_pushd

# pushdから重複を削除
setopt pushd_ignore_dups

# コマンドミスを修正
setopt correct

# alias {{{
alias -g @l='| less'
alias -g @h='| head'
alias -g @g='| grep'
alias -g @gi='| grep -ri'

source $HOME/.aliases
# }}}

# cdの後にlsを実行
chpwd() { ls -ltr --color=auto }

# どこからでも参照できるディレクトリパス
cdpath=(~)

### Added by Zinit's installer {{{
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zinit-zsh/z-a-rust \
    zinit-zsh/z-a-as-monitor \
    zinit-zsh/z-a-patch-dl \
    zinit-zsh/z-a-bin-gem-node

### End of Zinit's installer chunk }}}

zinit ice pick"async.zsh" src"pure.zsh"
zinit light sindresorhus/pure

zinit ice blockf
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light zsh-users/zaw
zinit light zdharma/history-search-multi-word

zinit ice as"completion"
zinit snippet 'https://raw.githubusercontent.com/docker/compose/master/contrib/completion/zsh/_docker-compose'

zinit ice as"completion"
zinit snippet 'https://raw.githubusercontent.com/x-motemen/ghq/master/misc/zsh/_ghq'

# for bash_completion
autoload -U +X bashcompinit && bashcompinit

# fzf
export FZF_DEFAULT_OPTS='--height 40% --reverse --border'
# awscli
complete -C '/usr/local/bin/aws_completer' aws

# ghq fzf
function ghq-fzf() {
    local src=$(ghq list | fzf --preview "bat --color=always --style=header,grid --line-range :80 $(ghq root)/{}/README.*")
    if [ -n "$src" ]; then
        BUFFER="cd $(ghq root)/$src"
        zle accept-line
    fi
    zle -R -c
}
zle -N ghq-fzf
bindkey '^g' ghq-fzf

# function tmux-tree() {
#     tmux ls -F'#{session_id}:#{session_name}: #{T:tree_mode_format}' | while read -r s; do
#         session_info=$(echo "$s" | cut -d ':' -f 1)
#         session_name=$(echo "$s" | cut -d ':' -f 2)
#         if [[ -n "$1" ]] && [[ "$1" == "$session_name" ]]; then
#             echo -e "${ESC}[1;34m$session_info${ESC}[0m"
#         else
#             echo -e "${ESC}[1m$session_info${ESC}[0m"
#         fi
#         tmux lsw -t"$session_info" -F'[#{window_id}]#{T:tree_mode_format}' | while read -r w; do
#             echo "  ﬌ $w"
#         done
#     done
# }
# 
# zle -N tmux-tree
# function tmux-fzf() {
#     ESC='\033'
#     tree = "${functions[tmux-tree]}"
#     bat=${commands[bat]:-"batcat"}
#     session=$(tmux list-sessions -F "#{session_name}" 2>/dev/null |
#         fzf --exit-0 --preview="${tree} {} | ${bat} --theme TwoDark --style plain")
#     echo "$session"
# }
# zle -N tmux-fzf
# bindkey '^t' tmux-fzf

# yq
yq() {
    docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"
}

# tty
export GPG_TTY=$(tty)
complete -o nospace -C /usr/local/bin/bit bit

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/konafx/google-cloud-sdk/path.zsh.inc' ]; then . '/home/konafx/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/konafx/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/konafx/google-cloud-sdk/completion.zsh.inc'; fi

export PATH="$HOME/.poetry/bin:$PATH"
